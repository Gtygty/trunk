/* eslint-disable no-undef */
define(['indexApp'
      , 'common/util'
      , 'common/const'
      , 'model/mall/zstjGoodsModel'
      , 'service/baseService'
      , 'service/mall/zstjGoodsService']
      , function (app, util, Const, vModel) {
  app.controller('goodsCtrl', ['$scope'
                                 , 'signValid'
                                 , 'zstjGoodsService'
                                 , function ($scope, signValid, goodsService) {

      ($scope.vm = {

        MultiSelect: {
          //data:所有项目，list：multiselect数据源
          ConfigMultiSelect: function (target,data,list) {
            var self = $scope.vm.Goods;
            $scope.vm.MultiSelect.ConfigSortedTags();
            target.multiselect({     
                        enableClickableOptGroups: true,
                        enableCollapsibleOptGroups: true,
                        enableFiltering: true,
                        maxHeight:400,
                        placeholder: "请选择",
                        onChange: function (option,checked) {
                          goodsService.Goods.MultiSelectOnChange(data,self.Current.CheckIndexList,option,checked);
                          self.OnCreateQuotaListHtml();
                          $scope.vm.MultiSelect.ConfigSortedTags();
                          $scope.$apply();
                        }
                  }).multiselect('dataprovider', list);

                  $(".multiselect-container>li>a>label.radio, .multiselect-container>li>a>label.checkbox").css("margin-left","20px");
                  $(".multiselect dropdown-toggle btn btn-default").css("width","170%");
          },
          ConfigSortedTags: function () {
            var self = $scope.vm.Goods;
            var sortedArr = [];
            angular.copy(self.Current.CheckIndexList,sortedArr);
            //搜索权重最高的
            for (var i = 0; i < sortedArr.length; i++) {
              for (var j = 0; j < sortedArr.length - 1; j++) {
                if (sortedArr[j].Weight < sortedArr[j + 1].Weight) {
                  var temp = {};
                  temp = sortedArr[j];
                  sortedArr[j] = sortedArr[j + 1];
                  sortedArr[j + 1] = temp;
                }
              }
            }
            if (sortedArr.length > 5) {
              self.SortedWeightBtns = sortedArr.slice(0,5);
            }else {
              self.SortedWeightBtns = sortedArr;
            }

          },
          ConfigIncreaseLists: function () {
            var self = $scope.vm.Goods;
            var IncreaseListSetting= {
                  enableFiltering: true,
                  // buttonWidth: 255,
                  onChange: function(option, checked){
                    if (checked) {
                      for (var i = 0; i < self.IncreaseLists.length; i++) {
                        if (self.IncreaseLists[i].Id == option[0].value) {
                          self.Current.IncreaseGoods.push(self.IncreaseLists[i]);
                          break;
                        }
                      }
                      $scope.$apply();
                    } else {
                      for (var i = 0; i < self.Current.IncreaseGoods.length; i++) {
                        if (self.Current.IncreaseGoods[i].Id == option[0].value) {
                          self.Current.IncreaseGoods.remove(self.Current.IncreaseGoods[i]);
                          break;
                        }
                      }
                      $scope.$apply();
                    }
                  }
                };
            return IncreaseListSetting;
          }
        },
        Common: {
          InitConfig: function(){
            signValid.ValidAccess('#/mallGoodsManagement');                                           // 缓存登录验证
            $(".navli:eq(5)").addClass("active").siblings().removeClass("active");
            $('body').css('overflow', 'auto');

            document.addEventListener('uploaded', function(e){
                if($scope.vm.Goods.CurrentImageDiaolog == 'topImageAdd'){
                    $scope.vm.Goods.OnAddOrModByUploadImageCallBack(e.detail);
                }
            });
          },
          Init: function(){
            var self = $scope.vm.Common;

            self.InitConfig();
          }
        },
        CurrentTab: -1, // -1: 全部 0:下架 1:上架
        OnClickTabAll: function(){
          var self = $scope.vm;
          self.CurrentTab = -1;
        },
        OnClickTabUp: function(){
          var self = $scope.vm;
          self.CurrentTab = 1;
        },
        OnClickTabDown: function(){
          var self = $scope.vm;
          self.CurrentTab = 0;
        },
        Goods:{
          Search: {
            Type: -1,
            ProviderId: -1,
            // SupportId: '',
            Name: '',
            MinSalePrice: '',
            MaxSalePrice: '',
            GoodsState: -1,       // 0:下架 1:上架 2: 删除
            Id: '',
            GoodsType: -1         // -1: 所有 0:体检套餐 1:实体 2:服务 3:加项 4:团检套餐
          },
          GoodsTypeDDL: [{ text: '请选择', value: -1 },
              { text: '个检套餐', value: 0 },
              { text: '团检套餐', value: 4 }],
          ServiceDDL: [],
          SupplierSelectList:[],
          TypeDDL: [],
          TagDDL: [],
          List: [],
          Count: 0,
          UpList: [],
          UpCount: 0,
          DownList: [],
          DownCount: 0,
          CheckedAll: false,
          SelectedBatchUpOrDownGoods: -1,
          CurrentImageDiaolog:'',
          Current: goodsService.Entity(),
          SortedWeightBtns: [],//权重按钮
          IncreaseLists:[],//某机构下的加项
          // 1.1 初始化加载数据（必须先初始化下拉列表）
          OnLoad: function(){
            var self = $scope.vm.Goods;

            goodsService.Goods.List({
              ServiceDDL: self.ServiceDDL,
              TypeDDL: self.TypeDDL,
              callback: function(data){
                // console.dir(data.Goods[0].CommonInfo);
                // self.List = data.Goods;
                // self.Count = data.Count;
                self.OnDispatcherList(data.Goods, data.Count);
                self.CheckedAll = false;
                self.SelectedBatchUpOrDownGoods = -1;
              }
            });
          },
          // 1.1.1 分析数据到三个列表中
          OnDispatcherList: function(items, count){
            if(items){
              var self = $scope.vm.Goods,
                  upList = [], downList = [],
                  upCount = 0, downCount = 0;
              self.List = items;
              self.Count = count;
              for(var i=0; i<items.length; i++){
                var item = items[i];
                if(item && item.CommonInfo){
                  if(item.CommonInfo.State == 0){
                    downList.push(item);
                    downCount ++;
                  } else if(item.CommonInfo.State == 1){
                    upList.push(item);
                    upCount ++;
                  }
                }
              }
              // console.log(items);
              self.UpList = upList;
              self.UpCount = upCount;
              self.DownList = downList;
              self.DownCount = downCount;
            }
          },
          // 1.2 初始化下拉列表
          OnLoadAllDDL: function(){
            var self = $scope.vm.Goods;
            goodsService.Goods.ServiceDDL({
              callback: function(datas){
                datas.unshift({ text: '全部', value: -1 });
                self.ServiceDDL = datas;
                for(var i=0;i<datas.length;i++){
                  var tag = {
                    label: datas[i].text,
                    title: datas[i].text,
                    value: datas[i].value,
                    selected: false
                  };
                  self.SupplierSelectList.push(tag);
                }
                self.ConfigSupplierSelect();
                goodsService.Goods.TypeAndTagDDL({
                  callback: function(data){
                    data.Type.unshift({ text: '全部', value: -1});
                    self.TypeDDL = data.Type;
                    data.Tag.unshift({ text: '全部', value: -1});
                    self.TagDDL = data.Tag;
                    self.OnLoad();
                  }
                });
              }
            });
          },
          //设置服务商下拉框
          ConfigSupplierSelect:function() {
            var SupplierListSetting= {
              enableFiltering: true,
              buttonWidth: 255,
              onChange: function(option, checked){
                $scope.vm.Goods.Search.ProviderId = option[0].value;
              }
            }
            $("#supplierSelect").multiselect(SupplierListSetting).multiselect('dataprovider', $scope.vm.Goods.SupplierSelectList);
          },
          // 1.3 打开 添加商品
          OnAddDialog: function(){
            var self = $scope.vm.Goods;
            goodsService.Goods.EventGroupQuotaList({
              callback: function (data,list) {
                
                // 清理缓存对象
                self.Current = goodsService.Entity();
                $scope.vm.MultiSelect.ConfigMultiSelect($('#selectGoods'),data,list);
                $("#btnAddOrModFile").after($("#btnAddOrModFile").clone().val("")).remove(); // 7/12 BY XZL
                //添加修改商品modal
                $('#panelAddOrModGoods').modal('show');
              },
              checkedList: []
            });
            
          },
          // OnChangeGoodsType: function () {
          //   $scope.vm.Goods.Current.IncreaseGoods = [];
          //   // $("#goodsIncrease").multiselect('dataprovider', []);
          // },
          // 1.3.1 添加商品
          OnAdd: function(){
            var self = $scope.vm.Goods;

            goodsService.Goods.AddOrEdit({
              param: self.Current,
              callback: function(result){
                self.OnLoad();
                $('#panelAddOrModGoods').modal('hide');
              }
            });
          },
          //修改弹框中机构
          OnChangeGoodsDept: function () {
            var dept = $scope.vm.Goods.Current.Tag.selectedService;
            $scope.vm.Goods.Current.IncreaseGoods = [];
            goodsService.Goods.GetGoodsIncreaseList({
              callback: function (resolveList,allList) {
                $scope.vm.Goods.IncreaseLists = allList;
                if (resolveList.length == 0) {
                  $("#goodsIncrease").multiselect('destroy');
                }else {
                  var setting = $scope.vm.MultiSelect.ConfigIncreaseLists();
                  $("#goodsIncrease").multiselect(setting).multiselect('dataprovider', resolveList);
                }
              },
              deptCode: dept,
              selectIncreaseItem: []
            });
          },
          // 1.3.2 打开 编辑商品详情
          OnEditDialog: function(item){
            var self = $scope.vm.Goods;
            goodsService.Goods.FirstOrDefault({
              param: { Id: item.Id },
              ServiceDDL: self.ServiceDDL,
              TypeDDL: self.TypeDDL,
              callback: function(detailData){
                var increaseList = [];
                for (var i = 0; i < detailData.IncreaseList.length; i++) {
                  increaseList.push(detailData.IncreaseList[i]);
                }
                
                //修改为muliselect格式
                // console.dir(data);
                self.Current = goodsService.ConvertEntityToVM(detailData);
                self.Current.IncreaseGoods = [];
                
                //商品加项
                goodsService.Goods.GetGoodsIncreaseList({
                  callback: function (resolveList,allList) {
                    self.IncreaseLists = allList;
                    

                    for (var i = 0; i < increaseList.length; i++) {
                      for (var j = 0; j < allList.length; j++) {
                        if (allList[j].Id == increaseList[i]) {
                          self.Current.IncreaseGoods.push(allList[j]);
                          break;
                        }
                      }
                    }
                    
                    var setting = $scope.vm.MultiSelect.ConfigIncreaseLists();
                    $("#goodsIncrease").multiselect(setting).multiselect('dataprovider', resolveList);
                  },
                  deptCode: self.Current.SupplierCode,
                  selectIncreaseItem: increaseList
                });
                //指标项
                goodsService.Goods.EventGroupQuotaList({
                  callback: function (data,list) {
                    var tempArr = [];

                    for (var i = 0; i < data.length; i++) {
                      for (var j = 0; j < data[i].CheckIndexList.length; j++) {
                        if (data[i].CheckIndexList[j].selected) {
                          tempArr.push(data[i].CheckIndexList[j]);
                        }
                      }
                    }
                    //更改Current。CheckIndexList的引用
                    self.Current.CheckIndexList = tempArr;
                    //这里list是处理好的
                    $scope.vm.MultiSelect.ConfigMultiSelect($('#selectGoods'),data,list);
                    //添加修改商品modal
                    $('#panelAddOrModGoods').modal('show');
                  },
                  //detail中的checkIndexList,用来配置checked
                  checkedList: detailData.Other.CheckIndexList
                });
              }
            });
          },
          // 1.3.3 编辑商品详情
          OnEdit: function(){
            var self = $scope.vm.Goods;
            goodsService.Goods.AddOrEdit({
              param: self.Current,
              callback: function(result){
                self.OnLoad();
                $('#panelAddOrModGoods').modal('hide');
              }
            });
          },
          // 1.3.2 打开 添加商品中的添加图片
          OnAddOrModByAddImageDialog: function(){
            $('#btnAddOrModFile').click();
          },
          // 1.3.3 添加商品中的添加图片
          OnAddOrModByUploadImage: function(){
              var btnImage = $('#btnAddOrModFile')[0].files[0],
                  _URL = window.URL || window.webkitURL,
                  img = new Image();

              if(!btnImage){
                util.showFade('请选择您要上传的图片！');
                return;
              }

              var size = btnImage.size / 1024,
                  ext = {jpg: true, jpeg: true, png: true, gif: false},
                  extName = btnImage.name.split('.').pop();

              if(!ext[extName]){
                util.showFade('请选择正确格式的图片！');
                return;
              }

              img.src = _URL.createObjectURL(btnImage);
              img.onload = function(){

                  if(this.width>750 || this.height>420){
                    util.showFade('图片宽高不能超过750*420');
                    return;
                  }

                  if(size>400){
                    util.showFade('图片大小不能超过400kb');
                    return;
                  }

                  var filePath = String.prototype.format('{0}/{1}.{2}', Const.ComboConfig.MallGoods, util.randomString(32), extName),
                      instance = new Sand({
                        bucket: Const.ComboConfig.bucket,
                        expiration: parseInt((new Date().getTime() + 3600000) / 1000),
                        form_api_secret: Const.ComboConfig.form_api_secret
                      });
                  util.showAjaxLoading();
                  instance.upload(filePath, '#btnAddOrModFile');
                   $scope.vm.Goods.CurrentImageDiaolog = 'topImageAdd';
              };

          },
          // 1.3.4 添加商品中的添加图片 回调
          OnAddOrModByUploadImageCallBack: function(data){
              $scope.vm.Goods.CurrentImageDiaolog = '';
              var imageSrc = Const.ComboConfig.ComboBaseUrl + data['path'];
              $scope.vm.Goods.Current.BannerUrls.push(imageSrc);
              $scope.$apply();
              util.hideAjaxLoading();
          },

          //7/12 XZL 添加OR编辑商品删除逻辑
          OnRemoveModImage: function(imgSrc){
            $scope.vm.Goods.Current.BannerUrls.remove(imgSrc);
          },

          // 1.3.5 添加商品中的添加标签
          OnAddOrModByAddTag: function(){
            var self = $scope.vm.Goods,
                item = self.Current.Tag.selectedTag,
                isContain = false,
                length = self.Current.Tags.length;
              if(item == -1){
                return;
              }
              if(length < 3) {
                for(var i=0; i < length; i++){
                  if(item == self.Current.Tags[i]){
                    isContain = true;
                    break;
                  }
                }
                if(!isContain){
                  self.Current.Tags.push(item);
                } else {
                  util.showFade('已添加此标签!');
                }
              } else {
                util.showFade('最多只能添加三个标签!');
              }
              self.Current.Tag.selectedTag = -1;
          },
          // 1.3.6 添加商品中的删除标签
          OnAddOrModByRemoveTag: function(item){
             var self = $scope.vm.Goods,
                index = -1,
                length = self.Current.Tags.length;
              for(var i=0; i < length; i++){
                if(item == self.Current.Tags[i]){
                  index = i;
                  break;
                }
              }
              if(index != -1){
                self.Current.Tags.splice(index, 1);
              }
          },
          //1.3.7生成商品指标项html
          OnCreateQuotaListHtml: function () {
            var self = $scope.vm.Goods;
            var checkedIndexList = self.Current.CheckIndexList;
            var htmlStr = '';
            if (checkedIndexList.length > 0) {
              htmlStr = "<script>(function(win) {var doc = win.document;var docEl = doc.documentElement;var tid;function refreshRem() {var width = docEl.getBoundingClientRect().width;if (width > 540) {width = 540;}var rem = width / 10;docEl.style.fontSize = rem %2B'px';}win.addEventListener('resize', function() {clearTimeout(tid);tid = setTimeout(refreshRem, 300);}, false);win.addEventListener('pageshow', function(e) {if (e.persisted) {clearTimeout(tid);tid = setTimeout(refreshRem, 300);}}, false);refreshRem();})(window);</script>";
              htmlStr += '<body style="margin:0;padding:0;"><table cellspacing="0" style="padding: 0;margin: 0;width: 100%;text-align: center;border-top:solid 0.026rem #ccc;border-bottom:solid 0.026rem #ccc;">';
              htmlStr +=  '<thead>'                                                                    +
                            '<tr style="padding: 0;margin: 0;background-color: #3683EF;">'  + 
                              '<th style="padding: 0.14rem;text-align: center; color:#fff;width: 5%;border-right:solid 0.013rem #ccc;border-left:solid 0.013rem #ccc;"></th>'        +
                              '<th style="padding: 0.14rem;text-align: center; color:#fff;width: 19%;border-right:solid 0.013rem #ccc;border-left:solid 0.013rem #ccc;">项目</th>'                    +
                              '<th style="padding: 0.14rem;text-align: center; color:#fff;width: 38%;border-right:solid 0.013rem #ccc;border-left:solid 0.013rem #ccc;">内容</th>'                    +
                              '<th style="padding: 0.14rem;text-align: center; color:#fff;width: 38%;border-right:solid 0.013rem #ccc;border-left:solid 0.013rem #ccc;">意义</th>'                    +
                            '</tr>'                                                                    +
                          '</thead>'                                                                   +
                          '<tbody>';
              for (var i = 0; i < checkedIndexList.length; i++) {
                if (i%2 == 1) {
                  htmlStr += '<tr style="padding: 0;margin: 0;">';
                }else {
                  htmlStr += '' + '<tr style="padding: 0;margin: 0;background-color: #f5f5f5;">';
                }
                htmlStr += '' + '<td style="padding: 0.14rem;text-align: center;border-right:solid 0.013rem #ccc;border-left:solid 0.013rem #ccc;">' + (i + 1) + '</td>';
                htmlStr += '' + '<td style="padding: 0.14rem;text-align: left;border-right:solid 0.013rem #ccc;border-left:solid 0.013rem #ccc;">' + checkedIndexList[i].Project + '</td>';
                htmlStr += '' + '<td style="padding: 0.14rem;text-align: left;border-right:solid 0.013rem #ccc;border-left:solid 0.013rem #ccc;">' + checkedIndexList[i].Content + '</td>';
                htmlStr += '' + '<td style="padding: 0.14rem;text-align: left;border-right:solid 0.013rem #ccc;border-left:solid 0.013rem #ccc;">' + checkedIndexList[i].Desc + '</td>';
                htmlStr += '' + '</tr>';
              }
              htmlStr += '</tbody></table></body>';
            }
            self.Current.CheckIndexDescription = htmlStr;
          },
          //导出excel表格
          OnOutCSV:function(){
            var sourceData = [];
            var columnNameList = ["项目","内容","意义","类别"];
            var ecportList = $scope.vm.Goods.Current.CheckIndexList;
            ecportList.forEach(function(item, index, array){
              var sexTypes = '';
              for (var i = 0; i < item.SexType.length; i++) {
                sexTypes += item.SexType[i] + '、';
              }
              sourceData.push({
                'Project':item.Project,
                'Content':item.Content,
                'Desc':item.Desc,
                'SexType':sexTypes.substring(0,sexTypes.length - 1)
              })
            })
            if(sourceData.length==0){
              util.showFade("请勾选客户信息！");
              return false;
            }
            util.CreateCSV(columnNameList, sourceData);
          },
          // 1.4 打开 上架
          OnUpGoodsDialog: function(item){
            var self = $scope.vm.Goods;
            self.Current.Id = item.Id;
            item.Checked = true;
            // self.Current.Tag.goodsState = item.CommonInfo.State;
            $('#panelUpGoods').modal('show');
          },
          // 1.4.1 上架
          OnUpGoods: function(){
            var self = $scope.vm.Goods;
            //  console.log(self.Current);
            self.OnBatchUpGoods([ self.Current.Id ], function(result){
              if(result){
                  $('#panelUpGoods').modal('hide');
                  util.showFade('上架成功！');
                  self.OnLoad();
                }
            });
          },
          // 1.4.2 批量上架
          OnBatchUpGoods: function(ids, callback){
            goodsService.Goods.UpGoods({
              param: { GoodsIds: ids },
              callback: callback
            });
          },
          // 1.5 打开 下架
          OnDownGoodsDialog: function(item){
            var self = $scope.vm.Goods;
            self.Current.Id = item.Id;
            item.Checked = true;
            // self.Current.Tag.goodsState = item.CommonInfo.State;
            $('#panelDownGoods').modal('show');
          },
          // 1.5.1 下架
          OnDownGoods: function(){
            var self = $scope.vm.Goods;
            //  console.log(self.Current);
            self.OnBatchDownGoods([ self.Current.Id ], function(result){
              if(result){
                  $('#panelDownGoods').modal('hide');
                  util.showFade('下架成功！');
                  self.OnLoad();
                }
            });
          },
          // 1.5.2 批量下架
          OnBatchDownGoods: function(ids, callback){
            goodsService.Goods.DownGoods({
              param: { GoodsIds: ids },
              callback: callback
            });
          },
          // 1.6 打开 删除商品
          OnRemoveGoodsDialog: function(item){
            var self = $scope.vm.Goods;
            self.Current.Id = item.Id;
            // self.Current.Tag.goodsState = item.CommonInfo.State;
            if(item.CommonInfo.State == 1)
             $('#panelConfirmRemoveGoods').modal('show');
            else
             $('#panelRemoveGoods').modal('show');
          },
          // 1.6.1 打开 删除商品
          OnRemoveGoods: function(){
            var self = $scope.vm.Goods;
            goodsService.Goods.RemoveGoods({
              param: {
                GoodsIds: [ self.Current.Id ]
              },
              callback: function(result){
                if(result){
                  $('#panelRemoveGoods').modal('hide');
                  util.showFade('删除成功！');
                  self.OnLoad();
                }
              }
            });
          },
          // 1.7.1 全选
          OnCheckedAll: function(){
            var self = $scope.vm.Goods;
            // console.log(self.CheckedAll);
            for(var i=0; i< self.List.length; i++){
              var item = self.List[i];
              item.Checked = self.CheckedAll;
            }
          },
          // 1.7.2 选择子项
          OnCheckedItem: function(item){
            var self = $scope.vm.Goods,
                length = self.List.length,
                count = 0;
            // console.log(item.Checked);
            for(var i=0; i< length; i++){
              var item = self.List[i];
              if(item.Checked){  count++; } else { break; }
            }
            if(count && count == length){
              self.CheckedAll = self.List[0].Checked;
            } else{
              self.CheckedAll = false;
            }
          },
          // 1.7.6 选择子项
          OnCheckedItemDown: function(item){
            var self = $scope.vm.Goods,
                length = self.DownList.length,
                count = 0;
            // console.log(item.Checked);
            for(var i=0; i< length; i++){
              var item = self.DownList[i];
              if(item.Checked){  count++; } else { break; }
            }
            if(count && count == length){
              self.CheckedAllDown = self.DownList[0].Checked;
            } else{
              self.CheckedAllDown = false;
            }
          },

          OnChangeUpOrDownGoodsModal:function(){
            if($scope.vm.Goods.SelectedBatchUpOrDownGoods+"" == 0+""){
              $("#goodsOffsaleModal").modal('show');
            }else if($scope.vm.Goods.SelectedBatchUpOrDownGoods+"" == 1+""){
              $("#goodsOnsaleModal").modal('show');
            }
            $scope.vm.Goods.SelectedBatchUpOrDownGoods = -1;
          },

          OnUpGoods:function(){
            var self = $scope.vm.Goods,
              tempData = [];
            for(var i=0; i< self.List.length; i++){
              var item = self.List[i];
              if(item.Checked){
                if(item.CommonInfo.State == 0){
                  tempData.push(item.Id);
                }
              }
            }
            if(!tempData.length)
            {
              util.showFade('请选择你要批量上架的商品！');
              self.SelectedBatchUpOrDownGoods = -1;
              return;
            }
            // console.log(tempData)
            self.OnBatchUpGoods(tempData, function(result){
              if(result){
                util.showFade('批量上架成功！');
                self.OnLoad();
              }
            });
          },

          OnDownGoods:function(){
            var self = $scope.vm.Goods,
              tempData = [];
            for(var i=0; i< self.List.length; i++){
              var item = self.List[i];
              if(item.Checked){
                if(item.CommonInfo.State == 1){
                  tempData.push(item.Id);
                }
              }
            }
            if(!tempData.length)
            {
              util.showFade('请选择你要批量下架的商品！');
              self.SelectedBatchUpOrDownGoods = -1;
              return;
            }
            // console.log(tempData)
            self.OnBatchDownGoods(tempData, function(result){
              if(result){
                util.showFade('批量下架成功！');
                self.OnLoad();
              }
            });
          },

          // 1.8 批量上下架操作
          OnChangeUpOrDownGoods: function(){
            var self = $scope.vm.Goods,
                tempData = [];
            if(self.SelectedBatchUpOrDownGoods == 0){

            } else if(self.SelectedBatchUpOrDownGoods == 1){

            }
          },
          // 2.0 查询
          OnSearch: function(){
            var self = $scope.vm.Goods,
                search = self.Search;
              if(search.MinSalePrice){
                if(isNaN(search.MinSalePrice)){
                  util.showFade('请录入正确的价格');
                  search.MinSalePrice = '';
                  return;
                }
              }
              if(search.MaxSalePrice){
                if(isNaN(search.MaxSalePrice)){
                  util.showFade('请录入正确的价格');
                  search.MaxSalePrice = '';
                  return;
                }
              }
              // 设置相关的查询对话框
              search.GoodsState = $scope.vm.CurrentTab;
              goodsService.Goods.Search({
                param: search,
                ServiceDDL: self.ServiceDDL,
                TypeDDL: self.TypeDDL,
                callback: function(data){
                  // console.dir(data.Goods[0].CommonInfo);
                  // self.List = data.Goods;
                  // self.Count = data.Count;
                  self.OnDispatcherList(data.Goods, data.Count);
                  self.CheckedAll = false;
                  self.SelectedBatchUpOrDownGoods = -1;
                }
              });
          },
          // 2.0 清除 查询
          OnClearSearch: function(){
            var self = $scope.vm.Goods;
            self.Search = {
              Type: -1,
              ProviderId: -1,
              // SupportId: '',
              GoodsType: -1,
              Name: '',
              MinSalePrice: '',
              MaxSalePrice: '',
              GoodsState: -1,       // 0:下架 1:上架 2: 删除
              Id: ''
            };
            $("#supplierSelect").multiselect('select',-1).multiselect('rebuild');
          },
          // 2.1 打开 查看商品详情
          OnLookupDialog: function(item){
            var self = $scope.vm.Goods;

            goodsService.Goods.FirstOrDefault({
              param: { Id: item.Id },
              ServiceDDL: self.ServiceDDL,
              TypeDDL: self.TypeDDL,
              callback: function(data){
                var increaseList = [];
                for (var i = 0; i < data.IncreaseList.length; i++) {
                  increaseList.push(data.IncreaseList[i]);
                }
                // console.dir(data);
                self.Current = goodsService.ConvertEntityToVM(data);
                $scope.vm.MultiSelect.ConfigSortedTags();
                self.Current.IncreaseGoods = [];
                
                var disableData = goodsService.Goods.PreviewEventGroupQuotaList(self.Current.CheckIndexList);
                $('#disableSelectGoods').multiselect({     
                        enableFiltering: true,
                        placeholder: "请选择",
                  }).multiselect('dataprovider',disableData).multiselect('selectAll').multiselect('disable');
                //商品加项
                goodsService.Goods.GetGoodsIncreaseList({
                  callback: function (resolveList,allList) {
                    var IncreaseListSetting= {
                          enableFiltering: true,
                          // buttonWidth: 255,
                          onChange: function(option, checked){
                            if (checked) {
                              for (var i = 0; i < allList.length; i++) {
                                if (allList[i].Id == option[0].value) {
                                  self.Current.IncreaseGoods.push(allList[i]);
                                  break;
                                }
                              }
                              $scope.$apply();
                            } else {
                              for (var i = 0; i < allList.length; i++) {
                                if (allList[i].Id == option[0].value) {
                                  self.Current.IncreaseGoods.remove(allList[i]);
                                  break;
                                }
                              }
                              $scope.$apply();
                            }
                          }
                        };

                    for (var i = 0; i < increaseList.length; i++) {
                      for (var j = 0; j < allList.length; j++) {
                        if (allList[j].Id == increaseList[i]) {
                          self.Current.IncreaseGoods.push(allList[j]);
                          break;
                        }
                      }
                    }
                    $("#goodsIncreasePreview").multiselect(IncreaseListSetting).multiselect('dataprovider', resolveList).multiselect('disable');
                  },
                  deptCode: self.Current.SupplierCode,
                  selectIncreaseItem: increaseList
                });
                $('#panelPreviewGoods').modal('show');
              }
            });
          },
          Init: function(){
            var self = $scope.vm.Goods;

            self.OnLoadAllDDL();
          }
        },
        Init: function(){
          var comon = $scope.vm.Common,
              goods = $scope.vm.Goods;

          comon.Init();
          goods.Init();
        }
      }).Init();

      // Watch SalePrice (售卖价格)
      $scope.$watch('vm.Goods.Current.SalePrice', function(newValue, oldValue){
        var self = $scope.vm.Goods.Current;
        if(newValue && newValue > 0 && self.CostPrice > 0){
          var price = (newValue - self.CostPrice) / newValue;
          self.Tag.grossMargin = price.toFixed(2);
        }
      });

      // Watch SalePrice (成本价)
      $scope.$watch('vm.Goods.Current.CostPrice', function(newValue, oldValue){
        var self = $scope.vm.Goods.Current;
        if(newValue && newValue > 0 && self.SalePrice > 0){
          var price = (self.SalePrice - newValue) / self.SalePrice;
          self.Tag.grossMargin = price.toFixed(2);
        }
      });

      // List
      $scope.$watch('vm.CurrentTab', function(newValue, oldValue){
        if(newValue != oldValue){
          var self = $scope.vm.Goods;
          self.CheckedAll = false;
          for(var i=0; i< self.List.length; i++){
            self.List[i].Checked = false;
          }
        }
      });

  }]);
  return app;
});
